#include<stdio.h>
#include<string.h>

int g[105][105],sum;
bool vis[105];

#define Qsize 105
int Q[Qsize], f=-1, r=-1;

void push(int key)
{
    r = (r+1)%(Qsize+1);
    Q[r]=key;
}

int pop()
{
    f = (f+1)%(Qsize+1);
    return Q[f];
}

bool qEmpty()
{
    if(r==-1 || f==r)
        return true;
    return false;
}
void show()
{
    printf("queue: ");
    for(int i=f+1;i<=r;i++)
        printf("%d ",Q[i]);
    printf("\n");
}

void bfs(int s, int n)
{
    memset(vis, false, n+1);
    push(s);

    while(!qEmpty())
    {
        int u = pop();
        for(int i=1;i<=n;i++)
        {
            if(g[u][i]==1 && !vis[i])
            {
                sum++;
                vis[i]=true;
                push(i);
            }
        }
    }
}
int main()
{
   int n,u,v,m;
    while(1)
    {
        memset(g,0,sizeof(g));
        scanf("%d",&n);
        if(n==0)
            break;
        while(1)
        {
            scanf("%d",&u);
            if(u==0)
                break;
            while(1)
            {
                scanf("%d",&v);
                if(v==0)
                    break;
                g[u][v]=1;
            }
        }
//        for(int i=1;i<=n;i++)
//        {
//            for(int j=1;j<=n;j++)
//                printf("%d ",g[i][j]);
//            printf("\n");
//        }
        scanf("%d",&m);
        for(int i=0;i<m;i++)
        {
            scanf("%d",&u);
            sum=0;
            bfs(u,n);
            printf("%d",n-sum);
            for(int j=1;j<=n;j++)
            {
                if(vis[j]==false)
                    printf(" %d",j);
            }
            printf("\n");
        }
    }
}
