#include <stdio.h>
#include <string.h>
#include<string>
#include<map>
#include<vector>
#include<algorithm>
#include<cmath>
#include<climits>
using namespace std;

struct node
{
    int x;
    int y;
};
vector<int>B;
int mx=INT_MIN;
struct node A[21];
int board[8][8];

bool check(int r, int c)
{
    if(c==0)
        return false;
    for(int i=0;i<c;i++)
    {
        if(A[i].x==r || A[i].y==c)
            return true;
        if(abs(A[i].x-r)==abs(A[i].y-c))
            return true;
    }
    return false;
}

void solve(int c)
{
    if(c==8)
    {
        int temp=0;
        for(int i=0; i<8; i++)
        {
            temp+=board[A[i].x][A[i].y];
        }
        if(temp>mx)
        {
            mx=temp;
        }
    }
    else
    {
        for(int i=0; i<8; i++)
        {
            if(!check(i,c))
            {
                A[c].x=i;
                A[c].y=c;
                solve(c+1);
            }
        }
    }
}
/* Driver program to test above functions */
int main()
{
    int n,ta=0;
    struct node temp,temp1;
    scanf("%d",&n);
    while(n--)
    {
        for(int i=0;i<8;i++)
        {
            for(int j=0;j<8;j++)
            {
                scanf("%d",&board[i][j]);
            }
        }
        mx=INT_MIN;
        solve(0);
        printf("%5d\n",mx);
    }
    return 0;
}
