#include <bits/stdc++.h>
using namespace std;

int dp[1001][31];
int b[1001];
int W[1001];

int knapsack(int k, int w)
{
    if(k==0 || w==0)
        dp[k][w]=0;
    if(dp[k][w]!=-1)
        return dp[k][w];
    if(W[k]>w)
        dp[k][w]=knapsack(k-1,w);
    else
        dp[k][w]=max(b[k]+knapsack(k-1,w-W[k]),knapsack(k-1,w));
    return dp[k][w];
}

int main()
{
    int t,n,w,m,sum=0,s;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        for(int i=1;i<=n;i++)
        {
            scanf("%d%d",&b[i],&W[i]);
        }
        memset(dp,-1,sizeof(dp));
        scanf("%d",&m);
        for(int i=0;i<m;i++)
        {
            scanf("%d",&s);
            sum+=knapsack(n,s);
        }
        printf("%d\n",sum);
        sum=0;
    }
}
